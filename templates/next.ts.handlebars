/** DO NOT EDIT THIS FILE BECAUSE THIS FILE IS AUTOMATICALLY GENERATED 
** BY SWAGGER-TO-JS-VALIDATOR NPM PACKAGE
*/

import type { NextApiRequest } from 'next';
import * as Yup from 'yup';

{{#each routes}}
export const {{this.validatorFunctionName}} = async (req: NextApiRequest) => {
    // check if the request's method is allowed
{{#if this.singleMethod}}
    if (req.method?.toLowerCase() !== "{{ this.singleMethod }}") {
        return {
            error: {
                status: 405,
                message: 'Method not allowed'
            },
            schema: null
        }
    }
{{else}}
    if (!{{{ this.methods }}}.some(el => el.toLowerCase() === req.method?.toLowerCase())) {
        return {
            error: {
                status: 405,
                message: 'Method not allowed'
            },
            schema: null
        }
    }
{{/if}}

{{#if this.singleValidator}}
    return {
        error: null,
        schema: {{{ this.singleValidator.schemaValidator }}}
    }
{{else}}
{{#if this.validators }}
    switch (req.method?.toLowerCase()) {
{{#each this.validators  }}
        case "{{ this.method }}": {
            return {
                error: null,
                schema: {{{ this.schemaValidator }}}
            }
        }

{{/each}}
    }

{{/if}}
{{/if}}

}

{{{ this.validatorFunctionResolvedReturnType }}}

{{/each}}